자바스크립트
7. 반복문

	1) while 

	while(조건식) {
		// 조건식이 참일때 반복되는 코드 
	}


	2) do~while

	do {
		// 조건식이 참일때 반복되는 코드  
		// 조건이 거짓 이더라도 한번은 실행 된다.
		
	} while(조건식);

	조건식 : 반복을 유지하는 조건 / 반복을 중단 할 수 있는 조건..
	
		
	횟수가 정해진 반복문의 필수 요소
		초기값, 증감식, 조건식 
		
	3) for 
		- 횟수가 정해진 반복문 
		
		for(초기화식; 조건식; 증감식) {
			// 반복 실행되는 코드 
		}
		
		
		관례 
			
			횟수, 순서
			index : 0부터 시작하는 순서 번호
				i \
				
				
				변수명 i, j, k, l, m ... 
			
	break : 반복 중단
	continue : 반복 건너뛰기
	
	
8. ECMAScript 6 부터 추가된 데이터 타입
2015(ES6+, ES6Next) 모던 자바스트립트
1) 통일성 : 표준안 
2) 신기술 : 매년 스펙 추가 

1. 심벌(Symbol)	
1) 심벌의 생성	
2) 심벌과 문자열 연결하기
	
2. 템플릿 리터럴	
	참고) 메타 문자 
		\n : 줄 개행    =>   역따옴표 안에 줄개행 포함시킴
		\t : 탭키 1번 
		\b : 백스페이스 키 1번
		
3. 보간 표현식
	(placeholder)
	
	${변수}
	${연산식}
	${함수호출}
	
	==> console.log( `${i} X  ${j} = ${i*j}`);

객체 

(object) - 사물, 대상

1. 객체 리터럴
- 객체는 이름과 값을 한쌍을 묶은 데이터를 여러개 모은 것
- 객체는 데이터 여러개를 하나로 모은 복합 데이터로 연관배열 또는 사전(Diction) 이라고 부릅니다.
	{
		속성명: 값,
		속성명: 값,
		속성명: 값,
		...
	}
	var person = { name : '이아름', age : 20	}
	
	접근방법) 
	변수명.속성명   => 속성명을 변수로 사용할때는 못쓰는 한계
	변수명['속성명']
	
	var person = { name : '이아름', age : 20	}
	
	peron.name, peron.age, person['name'], peron['age']
	var key = 'name';   
	peron[key]    => 속성명 name을 key라는 변수에 넣어서 사용할 수 있다

2. 객체 리터럴로 객체 생성하기
	데이터
	CRUD ( create, read, update, delete )
	-> 이미 있는 객체에 속성명 대입하면 업데이트됨
	-> 추가 : 없는 속성명에 값을 대입하면 추가됨
	
	person.name = '이수정';  -> { name : '이수정', age : 20	}  
	person.address = '주소';  -> {name: '이수정', age: 20, address: '주소'}
	delete person.address; ->  -> { name : '이수정', age : 20	} 
	값 : 숫자, 문자, 논리값, 객체, null, undefined -> 전부 값으로 사용 가능 
	
3. 프로퍼티 추가와 삭제
4. in 연산자로 프로퍼티가 있는지 확인하기	
	'age' in person;  => true
	
	var person = {
		name : '최혜진',
		age : 20
	}
	for(var key in person) {
		console.log(key, person[key]);
	}
	==> name 최혜진
		age 20
   
   
   
5. 메서드	
   - 객체안에 정의된 함수
		var person = {
			name : '이아름',
			age : 20,
			showInfo : function() {
				console.log('메서드');
			}
		};
	
6. 객체는 참조 타입
	메모리
		데이터영역
		스택영역 - 함수 전용 메모리
		힙영역 - 객체 전용 메모리

