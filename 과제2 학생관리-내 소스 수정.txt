MainMenu
    MAIN, // 메인 화면
    JOIN, // 회원가입
    LOGIN, // 로그인
    MYPAGE, // 마이페이지
    GAME, // 게임하기
    STUDENT, //학생관리

public enum StudentMenu implements Menu {
    SUBJECTS, // 과목
    STUDENTS, // 학생
    SCORES // 성적
}


GameControllerLocator : 
  게임 컨트롤러 찾기 메서드 find() 에서 게임서브메뉴 혼자하기 같이하기 랭킹 에따른 
  


MainRouter getInstance() -> start() -> change(MainMenu.MAIN)
	- change(MainMenu.MAIN) 
	: 매개변수 menu에 따른 컨트롤러 판단하고 (게임컨트롤러, 멤버컨트롤러, 학생로케이터 판단 
	: 찾은 컨트롤러.run() 실행시킴
	
	

StudentControllerLocator

	- StudentController : 학생관리메인 
	- SubjectsController : 과목
	- StudentsController : 학생
	- ScoresController : 성적
	
	=> StudentController 학생관리메인
		- show() 재정의 : 템플릿츠...render( MainMenu.STUDENT)
		- prompt() : 메뉴중 골라라 입력받고 change(입력값)
		- change(m) : 컨트롤러 찾아서 컨트롤러.run() 시킴
			=> ??? 라우터랑 비슷하네??
			=> 라우터의 change는 매개변수가 enum menu
			=> 컨트롤러의 change는 매개변수가 입력받은 메뉴숫자
		
	=> SubjectsController 미완성
	=> StudentsController 미완성
	=> ScoresController 미완성
	
	
Templates
	SubjectsTpl
	StudentsTpl
	ScoresTpl
	
	MainTpl 수정 : 로그인상태의 메인메뉴 과목, 학생, 성적 고르기 노출

	
AbstractController 
	change() 메서드 수정 : 로그인상태의 경우 게임 말고 학생관리로 컨트롤러 변경 라우팅
	
MainTpl - getTpl() 수정 : q.종료 추가



StudentServiceLocator 
	- services.put(menu, service);
		menu : SUBJECTS
		service : SubjectService
		
SubjectController-prompt()
		Templates.getInstance().render(StudentMenu.SUBJECTS, () -> subjecting); 






훅은 템플릿에서 중간에 출력을 추가할때 사용한다고 보시면 될거 같아요! 
Template을 상속 받은 클래스에 
public void addHook(Consumer<String> hook) { 
	this.hook = hook 
}  

추가한 후 
getTpl 함수내에 적절하게 hook.get()



그리고 추가 출력은 controller의 show 에서 render에서 
출력할 문자열을 추가하면 되는데 아무래도 직접 보여드리는게 이해하는데 도움이 될거 같아요!



INSERT INTO subject values(2, '영어', '조정식','문');
INSERT INTO subject values(3, '사회', '이지영','문');
INSERT INTO subject values(4, '과학', '조정식','이');
INSERT INTO subject values(5, '국어', '서혜진','문');
INSERT INTO subject values(6, '체육', '손흥민','이');
INSERT INTO subject values(7, '음악', '조수미','문');





SubjectController - prompt()에서 입력받기 로 .. -> member 참조
	prompt() form build 해서 --> service.process(form)
	
	

public interface ServiceLocator {  추가
    Service find(Menu menu);

    Service findUpdate(Menu menu);
}

