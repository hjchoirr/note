CSS 기초

스타일과 스타일 시트
1. 스타일 형식
	선택자 {
		속성명 : 값;
		속성명 : 값;
	}
2. 스타일을 표기하는 방법
3. 스타일 주석
	-설명
	-적용배제
	/* ... */
	
4. 스타일과 스타일 시트
	1) 내부 스타일 시트 
		- 웹 문서 안에서 사용할 스타일을 문서 안에 정의한 것

		<style>
			스타일 정의 
		</style>
			
	2) 외부 스타일 시트
		- <link rel="stylesheet" type="text/css" href="외부 스타일 파일 경로">
		
		- 확장자 : 파일명.css
		
	3) 인라인 스타일
		태그 속성 - style 속성에 직접 스타일 정의 
	
주요 선택자
1. 전체 선택자
	* - 모든 태그 요소를 선택 
	
2. 태그 선택자

	태그명으로 요소를 선택
	a {
	
	}
	p {
	
	}
	
3. 클래스 선택자
	class : 복수개 선택시 
	
	.클래스명 {
	
	}

4. id 선택자
	id : 단수개 선택시
	
	#아이디명 {
	
	}
	
5. 그룹 선택자
	h, span, a {
		color : blue;
	}
	-> h, span, a 모두에 적용하라
	
6. 조상 자손 선택자
	조상선택자 ... 자손선택자 - 바로 위아래 아니어도 됨
	body ul li {
	}
	body하위의 ul하위의 li에 적용하라

7. 가상클래스 선택자

	1) 요소의 상태
	
	속성명, 속성명=값 으로도 선택

	선택자[속성명]
	input[type] : input 태그에 type속성이 있는 요소 

	선택자[속성명="값"]
	input[type="text"] : input 태그에 type속성 값이 text인 요소 

	선택자[속성명 ^="키워드"]
	input[type^="te"] : input 태그에 type속성 값이 te로 시작하는 요소 

	선택자[속성명 ~="키워드"]
	input[type~="ex"] : input 태그에 type속성 값에 ex키워드가 포함된 요소 

	선택자[속성명 $= "키워드"]
	input[type~="xt"] : input 태그에 type속성 값이 xt로 끝나는 요소 

	input[type="checkbox"]:checked + label {
		background: gray;
	}

	* transition : 전환효과 -> 애니메이션효과
	
	2) 요소의 순서
	  - :first-child : 첫번째 자식요소 선택 / :first-of-type 
	  - :last-child : 마지막 자식요소 선택 / :last-of-type 
	  - nth-child / :nth-of-type
	    - :nth-child(숫자) :숫자번째 자식요소 선택(1부터시작)
		- :nth-child(수식) :수식에 해당하는 요소 선택
		  2n : 짝수 - 2,4,6,8,10,...
		  2n+1 : 홀수 - 1,3,5,7,9,...
		
	3)조건에 따라서 선택
	  - :not(선택자) : 선택자를 제외한 모든 요소 선택
	  
	4)가상의 요소를 추가,선택
	  
	  (::)
	  - ::before : 자식요소의 첫번째에 가상의 요소 추가, 선택
	  - ::after : 자식요소의 마지막에 가상의 요소를 추가, 선택
	  
	    필수 속성 : content: '내용..'
	
참고) 결합자

	1. 부모자식선택자 ( 바로 위아래  )

		부모선택자 > 자식선택자 { 
		}
		ul > li > span 
		
	2. 형제 선택자
		1)형제선택자 : 선택자 기준 오른쪽 모든 형제 요소 
		  선택자 ~ 형제 선택자 {
		  }
		  
		2)인접형제 선택자 : 바로 오른쪽 옆 형제요소
		  선택자 + 인접형제 선택자 {
		  }

	3. 가상 클래스 선택자
		1) 요소의 상태
		  선택자 : 상태속성
		  - :checked: 체크된 상태 선택
		  - :selected: 선택된 상태 선택
		  - :hover: 마우스를 올린 상태 선택
		  - :focus: 입력 대기 상태

스타일 적용 우선순의
1. 범위가 넓을수록 적용 우선순위가 낮다
2. 범위가 좁을수록 적용 우선순위가 높다

	: 태그선택자 < 클래스선택자 < 아이디선택자 < style속성(인라인) < !important
	: !important 우선강제적용 : 사용 지양
	: 클래스가 가장 무난함
	: 같은 순의의 클래스, 태그라면 -> 나중에 적용된 선택자가 우선순위 높다



캐스케이딩 스타일 시트(CSS)
1. 캐스케이딩(Cascading)의 의미
	- CSS에서 'C'는 캐스캐이딩(Cascading)의 약자로 '위에서 아래로 흐르는 스타일 시트'라는 뜻
	- 스타일간의 충돌을 막기 위한 방법이 '위에서 아래로 흐르며 적용되는 방법'
	- 스타일 우선순위 : 스타일 규칙의 중요도, 적용 범위에 따라 우선순위가 결정되고 그 우선순위에 따라 위에서 아래로 스타일이 적용
	- 스타일 상속 : 태그들의 포함 관계에 따라 부모 요소의 스타일을 자식 요소로, 위에서 아래로 전달
	
2. 스타일 우선순위


글꼴 관련 스타일

1. font-family
   : 글꼴
   font-family: 글꼴명, 글꼴명(대체), 글꼴명...;
   
     - 시스템 폰트: OS에 설치된 폰트
	   참고) 글꼴명에 스페이스 있으면 반드시 따옴표로 감싸기 : "글꼴명"
	 - 맑은 고딕 : faont-family:"맑은 고딕";
	    : MS에만 있는 폰트
	    font-family: "맑은고딕", AppleGothic;
		
2. 웹 폰트
	- OS가 달라도 동일한 폰트 적용가능
	- 다양한 디자인의 폰트 제공
	참고)
	@import url(css경로) - 외부 CSS파일 추가, style 태그 내부, css 파일 내부에 정의 가능

3. font-size
   - 글자크기
   - 고정크기
      px - 픽셀, 화소 기준 크기, 1화소 = 1px
	  pt - 글자크기 
   - 상대크기 : 기준사이즈
      rem : 가장 상위 태그에 적용된 글꼴 사이즈 기준 - 1rem
	  em : 부모 요소에 적용된 글꼴 사이즈 기준 - 1em
   
4. font-weight
   : 폰트 두께
     - lighter 
     - normal(기본값:400)
	 - bold : 700
	 - bolder : 900
	 - 
     - 수치 : 100 ~ 900 / 400 - 기본 (폰트마다 지원범위 다름)
	   
   
5. font-variant 
	normal
	small-caps: 소문자를 대문자로 바꿔주되 크기는 소문자 크기로
        <style>
            span {
                font-variant: small-caps;
            }
		</style>
6. font-style
	italic : 기울임
	
	참고) i 태그
	      em 태그
7. font

	:폰트 관련 여러 스타일 한꺼번에 지정
		<style>
            .font2 {
                font: bold italic 30px dotum;
            }
		</style>
텍스트 스타일

1. color
	- 글자 색상
	- R(0~255)G(0~255)B(0~255) 조합 => 트루컬러

	- 함수 rgb(0~255,0~255,0~255);
	- 10진수 -> 16진수 로 표기
	  rgb(0,255,0) -> 00 FF 00 -> #00FF00 -> #0F0 (반복되는 숫자는 한번만 써도 됨) 
	  rgba(0~255,0~255,0~255,0~1)  : a - 투명도 1에 가까울수록 불투명
	- hsl() : h색상, s채도, l밝기
	- 색상명칭 : red, blue, orange,pink,...
		<style>
            .font2 {
                /*color: #00ff00;*/
                color: #0f0;
            }	  
			 .box {
                width: 200px;
                height: 200px;
                background: rgba(0,0,0,0.4);
            }
		</style>
        <div class="font2">가나다ABC</div>
        <div class="box"> ABC</div>		
		
2. text-decoration
	- none : 기본값
	- underline : 밑줄 / 참고) u태그
	- overline : 글 위쪽
	- line-through : 글 중간, 취소선 참고)s, strike, del태그
	
3. text-transform
	- none : 기본값
	- capitalize : 시작문자를 대문자로
	- uppercase : 소문자를 대문자로 바꿀때
	- lowercase : 대문자를 소문자로

		<style>
            .font3 {
                text-decoration: underline;
            }
            .font4 {
                text-transform: lowercase;
            }
		</style>
        <div class="font3">가나다</div>
        <div class="font4">ABC</div>

	
4. text-shadow : 그림자효과
	text-shadow: 가로거리 세로거리 번짐정도 색상
	
		<style>
	            .font7 {
                font-size: 30px;
                text-shadow: 3px 3px 5px #222;
                font-weight: bold;
            }
		</style>
        <div class="font7">가나다</div>

5. white-space : 줄개행 (가로 한정된 영역안의 텍스트에 적용)
	normal 기본값
	nowrap 줄개행X 
        <style>
            .box {
                width: 250px;
                height: 250px;
                background: #ccc;
                white-space: nowrap;
        </style>
        <div class="box">
            Lorem ipsum dolor sit amet consectetur adipisicing elit. Fugit natus consectetur modi ullam doloremque cumque dignissimos. Sequi, sint recusandae, ducimus dolores harum veniam exercitationem in, libero vero quidem accusamus qui?
        </div>	
		<div class

	참고)
		overflow  (가로 한정된 영역안의 텍스트에 white-space:nowrap 인 상태에서 적용)
		 :visible - 기본값 : 넘치더라도 보여주기
		 :hidden - 넘치는 영역은 감추기
		 :scroll - 스크롤바 생성
		 :auto - 넘치면 스크롤바 생서ㅇ, 넘치지 않으면 스크롤바X
		 
	text-overflow:
		- ellipsis :말줄임표
		
6. letter-spacing : 글자사이 간격
7. word-spacing : 단어사이 간격


문단 스타일
1. direction : 배치기준
	- ltr : (기본값)왼쪽 to 오른쪽
	- rtl : 오른쪽 to 왼쪽
	
2. text-align
	start : 기본값, direction이 ltr: 왼쪽,  rtl:오른쪽
	left : direction이 ltr: 오른쪽, rtl:왼쪽
	right
	center : (기본값)
	justify : 양쪽정렬

3. text-indent : 들여쓰기
4. line-height 
	: 줄간격(행간)
	1.2 : 기본값 - 20% 여백 위, 아래 적용
	
	숫자 : 비율
	고정크기(px, pt,rem)
	
5. text-overflow
	- clip : 기본값 - 넘치는 부분, 보임X
	- ellipsis : 말줄임표
	
목록 스타일
list-style-type
	ul
	  disc - 채워진 원 : 기본값
	  circle - 빈 원
	  square - 네모
	  none
	  
웹에서 색상 표현하기
1. 16진수 표기법
2. rgb와 rgba 표기법
3. 색상 이름 표기법


배경 색과 배경 이미지
1. background-color
2. background-clip 
	- border-box
	- padding-box
	- content-box
3. background-image
	:배경이미지
	
4. background-repeat
	: repeat : (기본값)반복
	: repeat-x : 좌->우 반복
	: repeat-y : 위->아래 반복
	: no-repeat : 반복없음
	
5. background-size
	- auto : 원본이미지 그대로 출력
	- contain : 이미지를 영역 안으로 축소/확대
	- cover : 이미지를 영역안으로 채우기
	- 크기값 : 
		background-size: 300px 300px;
		너비,높이 함께 지정하면 이미지 왜곡되므로 너비만 지정
	- 백분율 
		background-size: 50%;
	
6. background-position
	- 배경이미지 배치
	background-position: 좌->우 위->아래
	background-position: center bottom;
	
7. background-origin
	- border-box : 경계선부터 배치(기본값)
	- padding-box : 내부 여백 부터 배치
	- content-box : 내용 영역부터 배치
	참고) 여백 : margin(영역 외부 여백) padding(영역 내부 여백)
	
	
8. background-attachment 
	- scroll : 배경이미지도 스크롤 
	- fixed : 배경이미지 고정 - 기본값
	
9. background	  
	background: 색상 이미지url() 반복(repeat) attachment 배치(position);
	색상, 이미지 -> 둘중 하나는 필수
	background: url('images/bg2.jpg') no-repeat scroll center center;

CSS와 박스 모델

1. 블록 레벨 요소와 인라인 레벨 요소
	1) 블록 레벨(block-level) 요소
		- 공간O, 너비, 높이 지정 (width, height)
		- 줄개행
		- p, h1 ~ h6, div
		- 외부여백(margin) 상하좌우 적용가능
		
	2) 인라인 레벨(inline-level) 요소
		- 공간X, 너비, 높이 지정X
		- 줄개행X
		- a, i, u, b, span
		- 외부 여백(margin) : 좌우 외부 여백만 적용가능

2. 박스 모델(box model) - 박스 형태의 콘텐츠
	- 블록 레벨 요소
	
	1) width, height 속성 - 콘텐츠 영역의 크기
	2) display 속성
		- block : inline 태그를 block 태그 성격으로 바꿀때 사용
		- inline : block 태그를 inline 태그 성격으로 바꿀때
		- inline-block : inline(줄개행X) + block(너비, 높이, 상하 외부 여백)
		- none : 감추기 (영역조차 없어짐)
		참고) visibility - visible(보임, 기본값) hidden(감추기) : 보이지 않아도 영역 차지함
	
	

테두리 관련 속성들
1. border-style 

	- solid :직선
	- dashed : -----
	- dotted : ....
	- double : =====
	
2. border-width
	- 경계선 두께
	
3. border-color
	- 경계선 색상
	
4. border : 단축표기법
	border: 두께 스타일 색상;
	border: 3px solid blue;
	
	한쪽 경계선만..
	border-top: 
	border-right:
	border-bottom:
	border-left:
	
5. border-radius
	- 경계선 모서리 둥글게
	border-radius: 10px; <- 반지름이 10px인 원의 테두리
	border-radius: 50%;  <- 원
	
	border-top-left-radius:10px;  <- 상단왼쪽 모서리 둥글게
	border-bottom-right-radius:10px;  <- 하단오른쪽 모서리 둥글게
	
	
6. 타원 형태로 둥글게 만들기
	border-radius: 가로반지름 세로반지름;
	border-radius: 150px 40px; 
	
7. box-shadow 속성
	- 그림자 효과
	- 입체감
	box-shadow: 가로이동 세로이동 그림자두께  그림자색상
	box-shadow: 2px 2px 5px #222;
	
여백을 조절하는 속성들
1. margin - 외부여백
	margin: 50px; - 상, 하, 위, 아래 여백 모두 50px로
	margin: 50px 20px - 상하 50px, 좌우 20px
	margin: 50px 30px 20px; - 상 50, 우좌 30, 하 20
	margin: 50px 40px 30px 20px; -> 상 우 하 좌 순서
	
	margin-top:
	margin-right:
	margin-bottom:
	margin-left:
	
	좌우여백 : auto - 좌우 균등 여백 : block tag일때만 적용됨
2. padding - 내부여백
	padding: 50px; - 상, 하, 위, 아래 여백 모두 50px로
	padding: 50px 20px - 상하 50px, 좌우 20px
	padding: 50px 30px 20px; - 상 50, 우좌 30, 하 20
	padding: 50px 40px 30px 20px; -> 상 우 하 좌 순서

	padding-top:
	padding-right:
	padding-bottom:
	padding-left:
	
	

CSS 포지셔닝과 주요 속성들

1. CSS 포지셔닝 
	- 브라우저 화면 안에 각 콘텐츠 영역을 어떻게 배치할지를 결정하는 것
	
2. box-sizing
	- content-box :기본값, 내용물 기준, 내부여백과 경계선 있으면 전체크기가 증가
	- border-box :경계선 기준, 내부여백과 경계선 있어도 크기 변하지 않고 내용물의 크기감소
	
3. float
	- left: 왼쪽배치
	- right: 오른쪽 배치
	- none: 기본값
	
        <style>
            ul {
                list-style: none;
                margin: 0;
                padding: 0;
            }
            li {
                float: left;
            }
        </style>
        <ul >
            <li>메뉴1</li>
            <li>메뉴2</li>
            <li>메뉴3</li>
        </ul>

	참고) flexbox
	
4. clear
	- float가 적용된 앞의 요소와 함께 반영된 float 속성 제거
	- left -  loat:left 적용 제거
	- right - float:right 적용 제거
	- both -  float:left, float:right 적용 둘다 제거
	- 공간이 있는 요소에만 적용 가능함(block, inline-block)에서만 적용가능
	- 가상 클래스 선택자 ::after
	
	방법1)
		클리어하고 싶은 부분에 <span class="clear"></span> 추가하고
		span.clear {
			clear: left;
			display: block;
		}

	방법2)
		클리어하고 싶은 부분에 가상요소 ::after 추가하여 클리어
		ul::after {
			content: '';    <- 이거 꼭 (가상요소엔 내용이 있어야함)
			clear: left;
			display:block;  <- 이거 꼭 (블럭요소로 만들어야)
		}
	
5. position (중요)
	- static : 기본값 
	
	상대적인 배치
	- relative : 현재 요소의 위치(왼쪽 상단) 기준
	- absolute : 문서(윈도우) 왼쪽상단 기준 또는
	           : 상위요소에 상대배치 속성(relative,absolute,fixed) 이 적용된 경우, 상위요소의 왼쪽 상단이 배치기준
	- fixed : 뷰포트가 배치의 기준
	        (뷰포트:viewport)화면에 보이는 영역
			
            .box4 { 
                background: violet;
                position: fixed;   <- 보이는 창의 오른쪽 아래 
                bottom: 100px;     <- 아래 오른쪽 ( 창크기 조정해도 따라다님 )
                right: 100px;
            }			
	
	
	left - 좌에서 우로 배치
	right - 우에서 좌로 배치
	top - 위에서 아래로 배치
	bottom - 아래에서 위로
	
6. visibility
	visible - 기본값
	hidden - 감추기(영역을 유지)
	
	참고) display: none;  (영역도 없어짐)
	
7. z-index
	- 상대 배치에서 적용 가능(position - relative, absoloute, fixed)
	- 층위
	- 숫자가 높을 수록 앞쪽에 배치, 숫자가 낮을수록 뒤에 배치

다단으로 편집하기
1. column-width
	- 컬럼 너비
2. column-count
	- 나눠질 단수
3. column-gap

플렉스 박스 레이아웃 기본 속성들

        </style>
            .flex1 {
                display: flex;
            }
            .flex2 {
                display: flex;
                flex-direction: row-reverse;  /* 우 -> 좌 */
            }
        </style>
        <ul class="flex1">
            <li>메뉴1</li>
            <li>메뉴2</li>
            <li>메뉴3</li>
        </ul>
        <ul class="flex2">
            <li>메뉴1</li>
            <li>메뉴2</li>
            <li>메뉴3</li>

1. display 속성
	:flex
	- 부모요소에 정의하면 자식요소의 배치에 적용됨
2. flex-direction
	:row - 기본값 좌 -> 우
	:row-reverse - 우 -> 좌
	:column - 상 -> 하
	:column-reverse - 하 -> 상

3. flex-wrap
	- nowrap : 줄개행X, 기본값
	- wrap : 줄개행O
4. order
	- 배치 순서 변경
	- 자식요소에 정의
	- 숫자 작을수록 먼저 배치
5. flex-grow
	- 남았는 여백을 비율별로 배분   -> 너비를 0으로 맞추면 균일한 배분 가능             
			.flex1 li {
                width: 0;
            }
	- 자식요소에 설정
	
        <style>
            ul {
                list-style: none;
                margin: 0;
                padding: 0;
                border: 1px solid #000;
                height: 100px;
            }
            ul li:nth-of-type(3n+1) {
                background: orange;
            }
            ul li:nth-of-type(3n+2) {
                background: green;
            }
            ul li:nth-of-type(3n) {
                background: blue;
            }
            .flex1 {
                display: flex;
            }
            .flex1 li:nth-of-type(1) {
                flex-grow: 1;
            }
            .flex1 li:nth-of-type(2) {
                flex-grow: 1;
            }
            .flex1 li:nth-of-type(3) {
                flex-grow: 1;
            }
            
        </style>
        <ul class="flex1">
            <li>메뉴1</li>
            <li>메뉴2 메뉴2 메뉴2메뉴2 메뉴2 메뉴2메뉴2 메뉴2 메뉴2</li>
            <li>메뉴3</li>
        </ul>

플렉스 박스 항목 배치를 위한 속성들

1. justify-content : 가로정렬

	flex-start :완쪽정령
	flex-end : 우정렬
	center :가운데 정렬
	- 여백
	  space-between
	  space-around
	  space-evenly
	  
2. align-items : 세로정렬 ( 부모태그에 정의(flex) )
	stretch : 기본값, 부모요소의 높이에 맞게 자식요소 늘어남
	flex-start : 상단배치
	flex-end : 하단배치
	center : 가운데 배치

3. align-self : 자식요소 별 적용 
	stretch : 기본값, 부모요소의 높이에 맞게 자식요소 늘어남
	flex-start : 상단배치
	flex-end : 하단배치
	center : 가운데 배치


4. align-content
	- 플렉스 항목이 여러 줄에 걸쳐 표시될 때 align-content 속성을 사용하면 교차축 방향의 배치 방법을 지정할 수 있습니다.
	- justify-content와 동일속성 - 하나의 행
	- 여러행에 걸쳐있는 경우 적용
	- flex-start(좌) flex-end(우) center space-between space-around space-evenly
	- flex-wrap 

