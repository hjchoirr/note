5/22 시험 SQL 응용

13장 ~ 19장 까지

SELECT * FROM USER_CONSTRAINTS WHERE TABLE_NAME IN ('EMP', 'DEPT') ;

USER_CONSTRAINTS 찾아보기


2. 사전 정의된 롤
	1) CONNECT롤 
	2) RESOURCE 롤
	3) 보통 새로운 사용자를 생성하면 CONNECT롤과 RESOURCE롤을 부여하는 경우가 많습니다
	
	SQL> create user DBSTUDY4 identified by oracle;
	User created.
	SQL> grant connect, resource to DBSTUDY4; -- 새로 만든 사용자 DBSTUDY4 에게 connect와 resource 역할 부여
	Grant succeeded.		


PL/SQL 구조
1. 블록이란?


스칼라
참조형















5/23 부터 포트폴리오 만드는 기간

5/23 - 24 필요한거 강의

5/23 - 6/4

5/27 - 6/3  조별 과제 2가지를 3일씩 하고 발표 


인덱스 정보 DICTIONARY에서 확인하기

SELECT * FROM USER_INDEXES WHERE TABLE_NAME = 'EMP';
SELECT * FROM USER_IND_COLUMNS WHERE TABLE_NAME = 'EMP';



DECLARE
	V_DEPT DEPT%ROWTYPE;
	
	CURSOR C1 IS
		SELECT * FROM DEPT ;
BEGIN
	OPEN C1;
	LOOP
		FETCH C1 INTO V_DEPT;	
		EXIT WHEN C1%NOTFOUND;
	
		DBMS_OUTPUT.PUT_LINE('DEPTNO : ' || V_DEPT.DEPTNO);
		DBMS_OUTPUT.PUT_LINE('DNAME : ' || V_DEPT.DNAME);
		DBMS_OUTPUT.PUT_LINE('LOC : ' || V_DEPT.LOC);
		DBMS_OUTPUT.PUT_LINE('------------------');
	END LOOP;
	CLOSE C1;
END;


DECLARE 
	CURSOR C1 IS SELECT * FROM DEPT;
BEGIN
	FOR D IN C1 LOOP
		DBMS_OUTPUT.PUT_LINE('DEPTNO : ' || D.DEPTNO);
		DBMS_OUTPUT.PUT_LINE('DNAME : ' || D.DNAME);
		DBMS_OUTPUT.PUT_LINE('LOC : ' || D.LOC);
	END LOOP;
	
END;


DECLARE
	V_DEPT DEPT%ROWTYPE;
	CURSOR C1(P_DEPTNO DEPT.DEPTNO%TYPE) IS
		SELECT * FROM DEPT WHERE DEPTNO = P_DEPTNO;
BEGIN
	OPEN C1(10);
	LOOP
		FETCH C1 INTO V_DEPT;
		EXIT WHEN C1%NOTFOUND;
		DBMS_OUTPUT.PUT_LINE('DEPTNO : ' || V_DEPT.DEPTNO);
		DBMS_OUTPUT.PUT_LINE('DNAME : ' || V_DEPT.DNAME);
		DBMS_OUTPUT.PUT_LINE('LOC : ' || V_DEPT.LOC);
		
	END LOOP;
	
	CLOSE C1;
END;


DECLARE
	V_DNAME VARCHAR2(20);
	V_NUM NUMBER := 10;
BEGIN
	SELECT DNAME INTO V_DNAME FROM DEPT WHERE DEPTNO = 10 ;
	DBMS_OUTPUT.PUT_LINE(V_NUM / 0);
EXCEPTION
	WHEN VALUE_ERROR THEN 
		DBMS_OUTPUT.PUT_LINE('수치 또는 값 오류');
	WHEN TOO_MANY_ROWS THEN
		DBMS_OUTPUT.PUT_LINE('여러행 조회 오류');
	WHEN OTHERS THEN
		DBMS_OUTPUT.PUT_LINE('기타오류');
		DBMS_OUTPUT.PUT_LINE('SQLCODE : ' || TO_CHAR(SQLCODE));
		DBMS_OUTPUT.PUT_LINE('SQLERRM : ' || SQLERRM);
END;


DECLARE
	V_DNAME VARCHAR2(30);
BEGIN
	SELECT DNAME INTO V_DNAME FROM DEPT ;
EXCEPTION
	WHEN VALUE_ERROR THEN 
		DBMS_OUTPUT.PUT_LINE('수치 또는 값 오류');
	WHEN TOO_MANY_ROWS THEN
		DBMS_OUTPUT.PUT_LINE('여러행 조회 오류');
		DBMS_OUTPUT.PUT_LINE('SQLCODE : ' || TO_CHAR(SQLCODE));
		DBMS_OUTPUT.PUT_LINE('SQLERRM : ' || SQLERRM);
END;






357 Q1.
CREATE TABLE empidx AS SELECT * FROM emp;
CREATE INDEX idx_empidx_empno ON empidx (empno);
SELECT * FROM user_indexes WHERE table_name LIKE 'EMPIDX';

Q2.
CREATE OR REPLACE VIEW empidx_over15k as
	(
	SELECT empno, ename, job, deptno, sal, 
	nvl2(comm, 'O', 'X')comm  FROM emp
	)
;


395 Q1

CREATE TABLE DEPT_CONST (
	DEPTNO number(2) CONSTRAINT deptconst_deptno_pk PRIMARY KEY ,
	DNAME varchar2(14) CONSTRAINT deptconst_dname_unq UNIQUE,
	LOC varchar2(13) CONSTRAINT deptconst_loc_nn NOT null
);



CREATE TABLE emp_const (
	empno number(4) CONSTRAINT empconst_empno_pk PRIMARY KEY,
	ename varchar2(10) CONSTRAINT empconst_ename_nn NOT NULL,
	job varchar2(9),
	tel varchar2(20) CONSTRAINT empconst_tel_unq UNIQUE,
	hiredate DATE,
	sal number(7, 2) CONSTRAINT empconst_sal_chk CHECK sal BETWEEN 1000 AND 9999,
	deptno number(2),
	CONSTRAINT empconst_deptno_fk FOREIGN KEY (NUMBER) REFERENCES dept_const(deptno) 
);
