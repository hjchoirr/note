5/23 부터 포트폴리오 만드는 기간
5/23 - 24 필요한거 강의
5/23 - 6/4
5/27 - 6/3  조별 과제 2가지를 3일씩 하고 발표 

5/22 시험 SQL 응용

13장 ~ 19장 까지

SELECT * FROM USER_CONSTRAINTS WHERE TABLE_NAME IN ('EMP', 'DEPT') ;

USER_CONSTRAINTS 찾아보기


2. 사전 정의된 롤
	1) CONNECT롤 
	2) RESOURCE 롤
	3) 보통 새로운 사용자를 생성하면 CONNECT롤과 RESOURCE롤을 부여하는 경우가 많습니다
	
	SQL> create user DBSTUDY4 identified by oracle;
	User created.
	SQL> grant connect, resource to DBSTUDY4; -- 새로 만든 사용자 DBSTUDY4 에게 connect와 resource 역할 부여
	Grant succeeded.		


PL/SQL 구조
1. 블록이란?


스칼라
참조형



인덱스 정보 DICTIONARY에서 확인하기

SELECT * FROM USER_INDEXES WHERE TABLE_NAME = 'EMP';
SELECT * FROM USER_IND_COLUMNS WHERE TABLE_NAME = 'EMP';



DECLARE
	V_DEPT DEPT%ROWTYPE;
	
	CURSOR C1 IS
		SELECT * FROM DEPT ;
BEGIN
	OPEN C1;
	LOOP
		FETCH C1 INTO V_DEPT;	
		EXIT WHEN C1%NOTFOUND;
	
		DBMS_OUTPUT.PUT_LINE('DEPTNO : ' || V_DEPT.DEPTNO);
		DBMS_OUTPUT.PUT_LINE('DNAME : ' || V_DEPT.DNAME);
		DBMS_OUTPUT.PUT_LINE('LOC : ' || V_DEPT.LOC);
		DBMS_OUTPUT.PUT_LINE('------------------');
	END LOOP;
	CLOSE C1;
END;


DECLARE 
	CURSOR C1 IS SELECT * FROM DEPT;
BEGIN
	FOR D IN C1 LOOP
		DBMS_OUTPUT.PUT_LINE('DEPTNO : ' || D.DEPTNO);
		DBMS_OUTPUT.PUT_LINE('DNAME : ' || D.DNAME);
		DBMS_OUTPUT.PUT_LINE('LOC : ' || D.LOC);
	END LOOP;
	
END;


DECLARE
	V_DEPT DEPT%ROWTYPE;
	CURSOR C1(P_DEPTNO DEPT.DEPTNO%TYPE) IS
		SELECT * FROM DEPT WHERE DEPTNO = P_DEPTNO;
BEGIN
	OPEN C1(10);
	LOOP
		FETCH C1 INTO V_DEPT;
		EXIT WHEN C1%NOTFOUND;
		DBMS_OUTPUT.PUT_LINE('DEPTNO : ' || V_DEPT.DEPTNO);
		DBMS_OUTPUT.PUT_LINE('DNAME : ' || V_DEPT.DNAME);
		DBMS_OUTPUT.PUT_LINE('LOC : ' || V_DEPT.LOC);
		
	END LOOP;
	
	CLOSE C1;
END;


DECLARE
	V_DNAME VARCHAR2(20);
	V_NUM NUMBER := 10;
BEGIN
	SELECT DNAME INTO V_DNAME FROM DEPT WHERE DEPTNO = 10 ;
	DBMS_OUTPUT.PUT_LINE(V_NUM / 0);
EXCEPTION
	WHEN VALUE_ERROR THEN 
		DBMS_OUTPUT.PUT_LINE('수치 또는 값 오류');
	WHEN TOO_MANY_ROWS THEN
		DBMS_OUTPUT.PUT_LINE('여러행 조회 오류');
	WHEN OTHERS THEN
		DBMS_OUTPUT.PUT_LINE('기타오류');
		DBMS_OUTPUT.PUT_LINE('SQLCODE : ' || TO_CHAR(SQLCODE));
		DBMS_OUTPUT.PUT_LINE('SQLERRM : ' || SQLERRM);
END;


DECLARE
	V_DNAME VARCHAR2(30);
BEGIN
	SELECT DNAME INTO V_DNAME FROM DEPT ;
EXCEPTION
	WHEN VALUE_ERROR THEN 
		DBMS_OUTPUT.PUT_LINE('수치 또는 값 오류');
	WHEN TOO_MANY_ROWS THEN
		DBMS_OUTPUT.PUT_LINE('여러행 조회 오류');
		DBMS_OUTPUT.PUT_LINE('SQLCODE : ' || TO_CHAR(SQLCODE));
		DBMS_OUTPUT.PUT_LINE('SQLERRM : ' || SQLERRM);
END;






357 Q1.
CREATE TABLE empidx AS SELECT * FROM emp;
CREATE INDEX idx_empidx_empno ON empidx (empno);
SELECT * FROM user_indexes WHERE table_name LIKE 'EMPIDX';

Q2.
CREATE OR REPLACE VIEW empidx_over15k as
	(
	SELECT empno, ename, job, deptno, sal, 
	nvl2(comm, 'O', 'X')comm  FROM emp
	)
;


394 Q1

CREATE TABLE DEPT_CONST (
	DEPTNO number(2) CONSTRAINT deptconst_deptno_pk PRIMARY KEY ,
	DNAME varchar2(14) CONSTRAINT deptconst_dname_unq UNIQUE,
	LOC varchar2(13) CONSTRAINT deptconst_loc_nn NOT null
);



CREATE TABLE emp_const (
	empno number(4) CONSTRAINT empconst_empno_pk PRIMARY KEY,
	ename varchar2(10) CONSTRAINT empconst_ename_nn NOT NULL,
	job varchar2(9),
	tel varchar2(20) CONSTRAINT empconst_tel_unq UNIQUE,
	hiredate DATE,
	sal number(7, 2) CONSTRAINT empconst_sal_chk CHECK sal BETWEEN 1000 AND 9999,
	deptno number(2) CONSTRAINT empconst_deptno_fk REFERENCES DEPT_CONST (DEPTNO) 
);

SELECT TABLE_NAME, CONSTRAINT_NAME, CONSTRAINT_TYPE 
  FROM USER_CONSTRAINTS 
 WHERE TABLE_NAME IN ( 'EMP_CONST', 'DEPT_CONST' ) 
ORDER BY CONSTRAINT_NAME; 

P 416

Q1.
create user PREV_HW identified by ORCL ;
grant create session to PREV_HW;

Q2.

--grant select on SCOTT.EMP to PREV_HW with grant option; 
grant select on SCOTT.EMP to PREV_HW
grant select on SCOTT.DEPT to PREV_HW
grant select on SCOTT.SALGRADE to PREV_HW

Q3.
revoke select on scott.emp from prev_hw
revoke select on scott.dept from prev_hw;
revoke select on scott.salgrade from prev_hw;

P 422
PL/SQL에서 여러 명령어를 모아둔 프로그램의 기본단위를 (블록) 이라고 한다.
기본 PL/SQL 블록은 실행에 사용할 변수, 상수, 커서등을 선언하는 (DECLARE)와 조건문, 반복문,
SELECT DML,함수 등 실제 수행할 기능부를 정의라는 (BEGIN),
그리고 PL/SQL으로 제작한 프로그램의 실행도중 발생하는 오류를 처리하는 EXCEPTION으로 구성됩니다.



P 444 

Q1

BEGIN 
	FOR i IN 1..9 LOOP
		IF mod(i,2) = 1 THEN
			dbms_output.put_line('현재 i의 값 : ' || i);
		END IF;
	END LOOP;
	
END;

Q2.



DECLARE
	V_DEPTNO NUMBER ;
BEGIN
	V_DEPTNO := 30;
	CASE V_DEPTNO 
		WHEN 10 THEN DBMS_OUTPUT.PUT_LINE('ACCOUNTING');
		WHEN 20 THEN DBMS_OUTPUT.PUT_LINE('RESEARCH');
		WHEN 30 THEN DBMS_OUTPUT.PUT_LINE('SALES');
		WHEN 40 THEN DBMS_OUTPUT.PUT_LINE('OPERATION');
		ELSE DBMS_OUTPUT.PUT_LINE('N/A');
	END CASE;
			
END;



P 456 
오라클에서는 여러가지 데이터를 하나의 자료형으로 저장하고 사용하기 위해 직접 정의하는 
(복합자료형)을 제공합니다. 
(레코드)형은여라가지 자료형을 하나의 변수에 저장할때 사용합니다.
(컬렉션)형은 특정 자료형의 데이터 여러개를 하나의 변수에 저장할때 사용됩니다


p 478

명시적 커서 Loop 1.

DECLARE
	CURSOR c1 IS SELECT * FROM emp;
	V_EMP EMP%ROWTYPE;
BEGIN
	OPEN c1;
		LOOP
			FETCH c1 INTO V_EMP;
			EXIT WHEN c1%NOTFOUND;
			DBMS_OUTPUT.PUT_LINE('EMPNO : ' || V_EMP.EMPNO);
			
		END LOOP;
		
	CLOSE c1;
END;

명시적 커서 FOR 2.

DECLARE
	CURSOR C1 IS SELECT * FROM emp;
BEGIN
	FOR d IN C1 LOOP
		DBMS_OUTPUT.PUT_LINE('EMPNO : ' || d.EMPNO);
	END LOOP;
END;


P 479 exception
DECLARE 
	v_wrong DATE;
BEGIN
	select ename INTO v_wrong FROM emp WHERE empno = 7369;
	dbms_output.put_line('예외발생하면 실행되지 않습니다');
EXCEPTION
	WHEN OTHERS THEN
	
	dbms_output.put_line('오류가 발생하였습니다. [' || TO_CHAR(SYSDATE, 'YYYY-MM-DD hh:mm:ss') || ']');
	dbms_output.put_line('SQLCODE : ' || TO_CHAR(SQLCODE));
	dbms_output.put_line('SQLERRM : ' || SQLERRM);
END;

P 519 function

CREATE OR REPLACE FUNCTION FUNC_DATE_KOR(
	V_DATE DATE
)
RETURN varchar2
AS
BEGIN
	RETURN TO_CHAR(V_DATE, 'YYYY"년"MM"월"DD"일"');	
END FUNC_DATE_KOR;
